# Taken from https://github.com/ryanccn/nrr/blob/main/.github/workflows/build.yml, modified to change the targets
name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu	
        runner: 
          - ubuntu-latest
        include:
            # apple for x64 and arm
          - target: aarch64-apple-darwin
            runner: macos-14
          - target: x86_64-apple-darwin
            runner: macos-latest

            # windows
          - target: x86_64-pc-windows-msvc
            runner: windows-latest
          - target: aarch64-pc-windows-msvc	
            runner: windows-latest
            
            # linux
          - target: aarch64-unknown-linux-gnu	
            runner: ubuntu-latest
          - target: armv7-unknown-linux-gnueabihf
            runner: ubuntu-latest
          - target: i686-unknown-linux-gnu
            runner: ubuntu-latest
      fail-fast: false

    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
        if: ${{ matrix.runner == 'ubuntu-latest' }}

      - name: Build with cross
        run: cross build --release --locked --target ${{ matrix.target }}
        if: ${{ matrix.runner == 'ubuntu-latest' }}
        
      - name: Build
        run: cargo build --release --locked --target ${{ matrix.target }}
        if: ${{ matrix.runner != 'ubuntu-latest' }}
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: "error"
          name: quic-dns-${{ matrix.target }}
          path: |
            ./target/${{ matrix.target }}/release/quic-dns
            ./target/${{ matrix.target }}/release/quic-dns.exe
  benchmark:
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-latest
    name: Benchmark with dnspyre
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with: 
          name: quic-dns-x86_64-unknown-linux-gnu
      - name: Install dnspyre
        run: sudo env "GOBIN=/usr/local/bin/" go install github.com/tantalor93/dnspyre/v2@latest
      - name: Start server
        run: >
          cd $GITHUB_WORKSPACE &&
          chmod +x quic-dns &&
          sudo nohup ./quic-dns &
      - name: Benchmark it
        id: benchmark
        run: >
          echo -n "QPS=" >> $GITHUB_OUTPUT &&
          /usr/local/bin/dnspyre --probability 0.33 --json --duration 10m -c 2 https://github.com/Tantalor93/dnspyre/blob/master/data/alexa | jq '.["latencyStats"]["meanMs"]' >> $GITHUB_OUTPUT
      - name: Create commit comment
        uses: peter-evans/commit-comment@v3
        with:
          body: |
            dnspyre average response time: ${{ steps.benchmark.outputs.QPS }}ms
