# Taken from https://github.com/ryanccn/nrr/blob/main/.github/workflows/build.yml, modified to change the targets
name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu	
        runner: 
          - ubuntu-latest
        include:
            # apple for x64 and arm
          - target: aarch64-apple-darwin
            runner: macos-14
          - target: x86_64-apple-darwin
            runner: macos-latest

            # windows
          - target: x86_64-pc-windows-msvc
            runner: windows-latest
          - target: aarch64-pc-windows-msvc	
            runner: windows-latest
            
            # linux
          - target: aarch64-unknown-linux-gnu	
            runner: ubuntu-latest
          - target: armv7-unknown-linux-gnueabihf
            runner: ubuntu-latest
          - target: i686-unknown-linux-gnu
            runner: ubuntu-latest
      fail-fast: false

    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Setup NASM
        run: choco install nasm
        if: ${{ matrix.target == 'x86_64-pc-windows-msvc' }}

      - name: Setup armv7 cross compiling
        run: >
          sudo apt install binutils-arm-linux-gnueabihf gcc-arm-linux-gnueabihf &&
          echo "CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER=/usr/bin/arm-linux-gnueabihf-gcc" >> $GITHUB_ENV
        if: ${{ matrix.target == 'armv7-unknown-linux-gnueabihf' }}

      - name: Setup 32-bit cross compiling
        run: >
          sudo apt install binutils-i686-linux-gnu gcc-i686-linux-gnu &&
          echo "CARGO_TARGET_I686_UNKNOWN_LINUX_GNU_LINKER=/usr/bin/i686-linux-gnu-gcc" >> $GITHUB_ENV
        if: ${{ matrix.target == 'i686-unknown-linux-gnu' }}

      - name: Setup aarch64 cross compiling
        run: >
          sudo apt install binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu &&
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=/usr/bin/aarch64-linux-gnu-gcc" >> $GITHUB_ENV
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}

      - name: Build
        run: cargo build --release --locked --target ${{ matrix.target }}
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: "error"
          name: quic-dns-${{ matrix.target }}
          path: |
            ./target/${{ matrix.target }}/release/quic-dns
            ./target/${{ matrix.target }}/release/quic-dns.exe
  benchmark:
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-latest
    name: Benchmark with dnspyre
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with: 
          name: quic-dns-x86_64-unknown-linux-gnu
      - name: Install dnspyre
        run: sudo env "GOBIN=/usr/local/bin/" go install github.com/tantalor93/dnspyre/v2@latest
      - name: Install cloudflared
        run: >
          sudo mkdir -p --mode=0755 /usr/share/keyrings &&
          curl -fsSL https://pkg.cloudflare.com/cloudflare-main.gpg | sudo tee /usr/share/keyrings/cloudflare-main.gpg >/dev/null && 
          echo 'deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared jammy main' | sudo tee /etc/apt/sources.list.d/cloudflared.list &&
          sudo apt-get update && sudo apt-get install cloudflared

      - name: Start server
        run: >
          cd $GITHUB_WORKSPACE &&
          chmod +x quic-dns &&
          sudo nohup ./quic-dns &
      - name: Benchmark quic-dns
        id: benchmark-quic
        run: >
          echo "REPORT<<EOF" >> $GITHUB_OUTPUT &&
          /usr/local/bin/dnspyre --probability 0.33 --no-color --no-distribution --duration 10m -c 2 https://raw.githubusercontent.com/Tantalor93/dnspyre/master/data/alexa >> $GITHUB_OUTPUT &&
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Kill quic-dns and start cloudflared
        run: >
          sudo pkill quic-dns;
          sleep 1;
          sudo nohup cloudflared proxy-dns &
      - name: Benchmark cloudflared
        id: benchmark-cloudflared
        run: >
          echo "REPORT<<EOF" >> $GITHUB_OUTPUT &&
          /usr/local/bin/dnspyre --probability 0.33 --no-color --no-distribution --duration 10m -c 2 https://raw.githubusercontent.com/Tantalor93/dnspyre/master/data/alexa >> $GITHUB_OUTPUT &&
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create commit comment
        uses: peter-evans/commit-comment@v3
        with:
          body: |
            dnspyre report: 
            quic-dns: 
            ```
            ${{ steps.benchmark-quic.outputs.REPORT }}
            ```
            cloudflared: 
            ```
            ${{ steps.benchmark-cloudflared.outputs.REPORT }}
            ```
